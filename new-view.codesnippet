<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>nv</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import CommonUI
import UIKit

// MARK: - &lt;#View#&gt;

final class &lt;#View#&gt;: UIView {

    // MARK: Lifecycle

    init() {
        super.init(frame: .zero)
        translatesAutoresizingMaskIntoConstraints = false

        setUpViews()
        setUpConstraints()
    }

    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    // MARK: Public

    // MARK: Internal

    // MARK: Private

    private func setUpViews() {

    }

    private func setUpConstraints() {

    }
}

// MARK: - DataSource

extension &lt;#View#&gt;: DataSource {
    typealias DataSource = &lt;#View#&gt;DataSource

    func setData(_ dataSource: &lt;#View#&gt;DataSource) {

    }
}

// MARK: - &lt;#View#&gt;DataSource

struct &lt;#View#&gt;DataSource {

}

// MARK: Static DataSources

extension &lt;#View#&gt;DataSource {

}

// MARK: - Stylable

extension &lt;#View#&gt;: Stylable {
    typealias Style = &lt;#View#&gt;Style

    func setStyle(_ style: &lt;#View#&gt;Style) {

    }
}

// MARK: - &lt;#View#&gt;Style

struct &lt;#View#&gt;Style {

}

// MARK: Static Styles

extension &lt;#View#&gt;Style {

}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>9C16E70E-C0AB-4CC5-8984-8B76DAEB095A</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetSummary</key>
	<string>New UIView that conforms to DataSource and Stylable</string>
	<key>IDECodeSnippetTitle</key>
	<string>New View</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
